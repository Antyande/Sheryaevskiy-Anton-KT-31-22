// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SheryaevskiyAntonKT_31_22.Database;

#nullable disable

namespace SheryaevskiyAntonKT_31_22.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20250521183626_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AcademicDegree_id")
                        .HasComment("Id Степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("AcademicDegree_name")
                        .HasComment("Название степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_AcademicDegree_AcademicDegree_id");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Cafedra", b =>
                {
                    b.Property<int>("CafedraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cafedra_id")
                        .HasComment("Id Кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CafedraId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("boss_id")
                        .HasComment("Идентификатор заведующего кафедры");

                    b.Property<string>("CafedraName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("cafedra_name")
                        .HasComment("Название кафедры");

                    b.Property<byte[]>("Dataosnovania")
                        .IsRequired()
                        .HasColumnType("timestamp")
                        .HasColumnName("date_osnovania")
                        .HasComment("Дата основания");

                    b.HasKey("CafedraId")
                        .HasName("pk_Cafedras_cafedra_id");

                    b.HasIndex("AdminId")
                        .IsUnique();

                    b.HasIndex(new[] { "CafedraId" }, "idx_Cafedras_fk_boss_id_prepod_id");

                    b.ToTable("Cafedras", (string)null);
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Disciplines_id")
                        .HasComment("Id дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Disciplines_name")
                        .HasComment("Название дисциплины");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("DisciplineId")
                        .HasName("pk_Disciplines_disciplines_id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_position")
                        .HasComment("ID должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("positionName")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_Positions_posinion_id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Teacher")
                        .HasComment("Id преподавателей");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("Teacher_digreeId")
                        .HasComment("Степень преподавателя");

                    b.Property<int>("CafedraId")
                        .HasColumnType("int")
                        .HasColumnName("Teacher_cafedraId")
                        .HasComment("Кафедра преподавателя");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Teacher_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Teacher_lastname")
                        .HasComment("Отчество преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Teacher_midname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("Teacher_positionId")
                        .HasComment("Должность преподавателя");

                    b.Property<int?>("WorkloadId")
                        .HasColumnType("int");

                    b.Property<int>("WorkloadId1")
                        .HasColumnType("int");

                    b.HasKey("TeacherId")
                        .HasName("pk_Teachers_Teachers_id");

                    b.HasIndex("WorkloadId1");

                    b.HasIndex(new[] { "CafedraId" }, "idx_Teachers_fk_cafedra_id");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_Teachers_fk_degree_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_Teachers_fk_position_id");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Workload", b =>
                {
                    b.Property<int>("WorkloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_id")
                        .HasComment("Идентификатор занятия");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkloadId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор предмета");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("workload_hours")
                        .HasComment("Нагрузка в часах");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    b.HasKey("WorkloadId")
                        .HasName("pk_Workload_Id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_Workload_fk_TeacherId_id");

                    b.HasIndex(new[] { "DisciplineId" }, "idx_Workload_fk_subject_id");

                    b.ToTable("Workload", (string)null);
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Cafedra", b =>
                {
                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Teacher", "Boss")
                        .WithOne()
                        .HasForeignKey("SheryaevskiyAntonKT_31_22.Models.Cafedra", "AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_boss_id_prepod_id");

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Discipline", b =>
                {
                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Teacher", b =>
                {
                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_degree_id");

                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Cafedra", "Cafedra")
                        .WithMany()
                        .HasForeignKey("CafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cafedra_id");

                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_position_id");

                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Workload", "Workload")
                        .WithMany()
                        .HasForeignKey("WorkloadId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicDegree");

                    b.Navigation("Cafedra");

                    b.Navigation("Position");

                    b.Navigation("Workload");
                });

            modelBuilder.Entity("SheryaevskiyAntonKT_31_22.Models.Workload", b =>
                {
                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Discipline", "Disciplines")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_discipline_id");

                    b.HasOne("SheryaevskiyAntonKT_31_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_TeacherId_id");

                    b.Navigation("Disciplines");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
